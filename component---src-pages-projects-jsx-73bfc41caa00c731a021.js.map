{"version":3,"sources":["webpack:///./src/components/projectCard.jsx","webpack:///./src/pages/projects.jsx"],"names":["CardContainer","styled","TransitionLink","Content","div","Thumbnail","Img","DescriptionBox","Title","p","Desc","span","ProjectCard","data","title","desc","image","to","fluid","objectFit","objectPosition","Container","Projects","location","edges","useStaticQuery","projectImages","projects","projectList","map","project","find","node","relativePath","thumbnail","url","childImageSharp","key"],"mappings":"qLAKMA,EAAgBC,YAAOC,KAAV,6EAAGD,CAAH,gPAmBbE,EAAUF,IAAOG,IAAV,uEAAGH,CAAH,yHAQPI,EAAYJ,YAAOK,KAAV,yEAAGL,CAAH,sIASTM,EAAiBN,IAAOG,IAAV,8EAAGH,CAAH,mBAGdO,EAAQP,IAAOQ,EAAV,qEAAGR,CAAH,6GAQLS,EAAOT,IAAOU,KAAV,oEAAGV,CAAH,2FAsBKW,EAdK,SAAC,GAA0C,IAAD,IAAvCC,KAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,GACjD,OACE,kBAACjB,EAAD,CAAeiB,GAAIA,GACjB,kBAACd,EAAD,KACE,kBAACE,EAAD,CAAWa,MAAOF,EAAOG,UAAU,QAAQC,eAAe,cAC1D,kBAACb,EAAD,KACE,kBAACC,EAAD,KAAQM,GACR,kBAACJ,EAAD,KAAOK,O,wBC3DXM,EAAYpB,IAAOG,IAAV,yEAAGH,CAAH,mGAoDAqB,UA5CE,SAAC,GAAiB,EAAfC,SAAgB,IAEfC,EACfC,yBAAe,cADjBC,cAAiBF,MAmBbG,EAAWC,EAAYC,KAAI,SAAAC,GAC/B,IAAMd,EAAQQ,EAAMO,MAClB,SAAAf,GAAK,OAAIA,EAAMgB,KAAKC,eAAX,cAA0CH,EAAQI,aAEvDrB,EAAI,iBACLiB,EADK,CAERK,IAAKL,EAAQK,KAAO,KACpBnB,MAAOA,EAAMgB,KAAKI,gBAAgBlB,QAEpC,OAAO,OAAP,UAAYL,MAEd,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAACO,EAAD,KACGM,EAASE,KAAI,SAAAC,GAAO,OACnB,kBAAC,EAAD,CAAajB,KAAMiB,EAASO,IAAKP,EAAQhB,e","file":"component---src-pages-projects-jsx-73bfc41caa00c731a021.js","sourcesContent":["import React from 'react'\r\nimport { TransitionLink } from 'gatsby-plugin-transitions'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\n\r\nconst CardContainer = styled(TransitionLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n  height: 40vh;\r\n  box-sizing: border-box;\r\n  @media (min-width: 375px) {\r\n    width: 100vw;\r\n  }\r\n  @media (min-width: 768px) {\r\n    width: 50vw;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    width: 33vw;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    width: 25vw;\r\n  }\r\n`\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  box-shadow: 1px 1px 3px grey;\r\n  border-radius: 0.25rem;\r\n  flex: 1 1 auto;\r\n`\r\nconst Thumbnail = styled(Img)`\r\n  height: 80%;\r\n  border-top-left-radius: 0.25rem;\r\n  border-top-right-radius: 0.25rem;\r\n  filter: contrast(90%);\r\n  &:hover & {\r\n    filter: contrast(100%);\r\n  }\r\n`\r\nconst DescriptionBox = styled.div`\r\n  padding: 1rem;\r\n`\r\nconst Title = styled.p`\r\n  margin: 0;\r\n  font-size: 1.25rem;\r\n  font-weight: 300;\r\n  letter-spacing: 1.2px;\r\n  text-transform: uppercase;\r\n  color: #696969;\r\n`\r\nconst Desc = styled.span`\r\n  flex: 1 1 auto;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  color: #cccccc;\r\n  margin-bottom: 1.25rem;\r\n`\r\n\r\nconst ProjectCard = ({ data: { title, desc, image, to } }) => {\r\n  return (\r\n    <CardContainer to={to}>\r\n      <Content>\r\n        <Thumbnail fluid={image} objectFit='cover' objectPosition='top right' />\r\n        <DescriptionBox>\r\n          <Title>{title}</Title>\r\n          <Desc>{desc}</Desc>\r\n        </DescriptionBox>\r\n      </Content>\r\n    </CardContainer>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nimport ProjectCard from '../components/projectCard'\r\nimport projectList from '../data/projects.json'\r\nimport SEO from '../components/seo'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 7vh;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  padding-bottom: 3vh;\r\n`\r\nconst Projects = ({ location }) => {\r\n  const {\r\n    projectImages: { edges }\r\n  } = useStaticQuery(graphql`\r\n    query {\r\n      projectImages: allFile(\r\n        filter: { relativePath: { regex: \"/thumbnails/\" } }\r\n      ) {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            childImageSharp {\r\n              fluid(maxWidth: 480) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const projects = projectList.map(project => {\r\n    const image = edges.find(\r\n      image => image.node.relativePath === `thumbnails/${project.thumbnail}`\r\n    )\r\n    const data = {\r\n      ...project,\r\n      url: project.url || null,\r\n      image: image.node.childImageSharp.fluid\r\n    }\r\n    return { ...data }\r\n  })\r\n  return (\r\n    <>\r\n      <SEO title='Projects' />\r\n      <Container>\r\n        {projects.map(project => (\r\n          <ProjectCard data={project} key={project.title} />\r\n        ))}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}