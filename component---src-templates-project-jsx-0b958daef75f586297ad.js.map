{"version":3,"sources":["webpack:///./src/components/slices/Head.jsx","webpack:///./src/components/slices/StyledComponents.js","webpack:///./src/components/slices/ImageText.jsx","webpack:///./src/components/slices/List.jsx","webpack:///./src/components/slices/ImageWithCaption.jsx","webpack:///./src/components/slices/TextWithTitle.jsx","webpack:///./src/components/SliceZone.jsx","webpack:///./src/templates/Project.jsx"],"names":["HeadContainer","styled","div","SummaryBox","ImgContainer","StyledImg","img","HeaderTitle","h1","SubHead","Summary","CustomLink","a","Links","Head","title","date","summary","git","link","preview","href","url","src","width","dimensions","height","SliceContainer","section","Content","Title","h3","ImgSection","Separator","Paragraph","p","AltText","span","ImageText","slice","title1","primary","fields","imgs","img1","img2","map","image","i","key","alt","text","content","index","List","list","item","ImageWithCaption","TextWithTitle","body","SliceZone","slices","sliceComponents","PRISMIC_ProjectBodyImage_with_Caption","PRISMIC_ProjectBodyText_with_title","PRISMIC_ProjectBodyList","PRISMIC_ProjectBodyImage_text","SliceComponent","__typename","Container","pageQuery","Project","data","prismic","project"],"mappings":"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","file":"component---src-templates-project-jsx-0b958daef75f586297ad.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport IconLink from '../iconLink'\r\n\r\nconst HeadContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  @media (max-width: 1025px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst SummaryBox = styled.div`\r\n  width: 50%;\r\n  margin-right: 3rem;\r\n  @media (max-width: 1025px) {\r\n    width: 100%;\r\n    margin-right: 0;\r\n  }\r\n`\r\nconst ImgContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1 1rem;\r\n  height: 80%;\r\n  @media (max-width: 1025px) {\r\n    height: 100%;\r\n  }\r\n`\r\nconst StyledImg = styled.img`\r\n  margin: 2rem 0;\r\n  max-height: 360px;\r\n  width: auto;\r\n`\r\nconst HeaderTitle = styled.h1`\r\n  font-size: 2.5rem;\r\n  font-weight: 300;\r\n`\r\nconst SubHead = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-bottom: 1.5rem;\r\n`\r\nconst Summary = styled.div``\r\nconst CustomLink = styled.a`\r\n  padding: 0 3px;\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n  background: rgb(30, 43, 49);\r\n  color: white;\r\n`\r\nconst Links = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 5rem;\r\n`\r\n\r\nconst Head = ({ title, date, summary, git, link, preview }) => {\r\n  return (\r\n    <HeadContainer>\r\n      <SummaryBox>\r\n        <HeaderTitle>{title}</HeaderTitle>\r\n        <hr />\r\n        <SubHead>\r\n          <Links>\r\n            {link && <CustomLink href={link}>DEMO</CustomLink>}\r\n            <IconLink git url={git} />\r\n          </Links>\r\n          {date}\r\n        </SubHead>\r\n        <Summary>{summary}</Summary>\r\n      </SummaryBox>\r\n      <ImgContainer>\r\n        <StyledImg\r\n          src={preview.url}\r\n          width={preview.dimensions.width}\r\n          height={preview.dimensions.height}\r\n        />\r\n      </ImgContainer>\r\n    </HeadContainer>\r\n  )\r\n}\r\n\r\nexport default Head\r\n","import styled from 'styled-components'\r\n\r\nexport const SliceContainer = styled.section`\r\n  margin-top: 0rem;\r\n`\r\nexport const ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const Content = styled.div`\r\n  padding: 0 8rem;\r\n  @media (max-width: 1024px) {\r\n    padding: 0 1rem;\r\n  }\r\n`\r\nexport const Title = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 300;\r\n  margin: 1rem 0;\r\n`\r\nexport const ImgSection = styled.section`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: auto;\r\n  @media (max-width: 769px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`\r\nexport const ImgContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: auto;\r\n`\r\nexport const StyledImg = styled.img`\r\n  width: 90%;\r\n  max-width: 360px;\r\n  height: auto;\r\n  border: 1px solid grey;\r\n  @media (max-width: 769px) {\r\n    width: 100%;\r\n  }\r\n`\r\nexport const Separator = styled.div`\r\n  margin: 2rem;\r\n  height: 1px;\r\n  background: lightgrey;\r\n`\r\nexport const Paragraph = styled.p``\r\nexport const AltText = styled.span`\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n  font-weight: 300;\r\n  font-style: italic;\r\n  color: #a8a8a8;\r\n  text-align: center;\r\n`\r\n","import React from 'react'\r\n\r\nimport {\r\n  SliceContainer,\r\n  Content,\r\n  Title,\r\n  Paragraph,\r\n  ImgSection,\r\n  ImgContainer,\r\n  StyledImg,\r\n  AltText\r\n} from './StyledComponents'\r\n\r\nconst ImageText = ({\r\n  slice: {\r\n    primary: { title1 },\r\n    fields\r\n  }\r\n}) => {\r\n  const imgs = [fields[0].img1, fields[0].img2]\r\n  return (\r\n    <SliceContainer>\r\n      <Content>\r\n        <ImgSection>\r\n          {imgs.map((image, i) => {\r\n            return image ? (\r\n              <ImgContainer key={i}>\r\n                <StyledImg src={image.url} />\r\n                <AltText>{image.alt}</AltText>\r\n              </ImgContainer>\r\n            ) : null\r\n          })}\r\n        </ImgSection>\r\n        <Title>{title1[0].text}</Title>\r\n        {fields[0].content.map((p, index) => (\r\n          <Paragraph key={index}>{p.text}</Paragraph>\r\n        ))}\r\n      </Content>\r\n    </SliceContainer>\r\n  )\r\n}\r\n\r\nexport default ImageText\r\n","import React from 'react'\r\n\r\nimport { SliceContainer, Content, Title } from './StyledComponents'\r\n\r\nconst List = ({\r\n  slice: {\r\n    primary: { title1, list }\r\n  }\r\n}) => {\r\n  return (\r\n    <SliceContainer>\r\n      <Content>\r\n        <Title>{title1[0].text}</Title>\r\n        {list.map((item, i) => (\r\n          <li key={i}>{item.text}</li>\r\n        ))}\r\n      </Content>\r\n    </SliceContainer>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\n\r\nimport {\r\n  SliceContainer,\r\n  ImgSection,\r\n  StyledImg,\r\n  ImgContainer,\r\n  AltText\r\n} from './StyledComponents'\r\n\r\nconst ImageWithCaption = ({ slice }) => {\r\n  return (\r\n    <SliceContainer>\r\n      <ImgSection>\r\n        <ImgContainer>\r\n          <StyledImg src={slice.url} />\r\n          <AltText>{slice.alt}</AltText>\r\n        </ImgContainer>\r\n      </ImgSection>\r\n    </SliceContainer>\r\n  )\r\n}\r\n\r\nexport default ImageWithCaption\r\n","import React from 'react'\r\n\r\nimport { SliceContainer, Content, Title, Paragraph } from './StyledComponents'\r\n\r\nconst TextWithTitle = ({ slice }) => {\r\n  return (\r\n    <SliceContainer>\r\n      <Content>\r\n        <Title>{slice.primary.title1[0].text}</Title>\r\n        {slice.primary.body.map((p, index) => (\r\n          <Paragraph key={index}>{p.text}</Paragraph>\r\n        ))}\r\n      </Content>\r\n    </SliceContainer>\r\n  )\r\n}\r\n\r\nexport default TextWithTitle\r\n","import React from 'react'\r\nimport { ImageWithCaption, TextWithTitle, List, ImageText } from './slices'\r\nimport { Separator } from './slices/StyledComponents'\r\n\r\nconst SliceZone = ({ slices }) => {\r\n  const sliceComponents = {\r\n    PRISMIC_ProjectBodyImage_with_Caption: ImageWithCaption,\r\n    PRISMIC_ProjectBodyText_with_title: TextWithTitle,\r\n    PRISMIC_ProjectBodyList: List,\r\n    PRISMIC_ProjectBodyImage_text: ImageText\r\n  }\r\n\r\n  return (\r\n    slices &&\r\n    slices.map((slice, index) => {\r\n      const SliceComponent = sliceComponents[slice.__typename]\r\n      if (SliceComponent) {\r\n        return (\r\n          <div key={`slice-${index}`}>\r\n            <Separator />\r\n            <SliceComponent slice={slice} />\r\n          </div>\r\n        )\r\n      }\r\n      return null\r\n    })\r\n  )\r\n}\r\n\r\nexport default SliceZone\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nimport { Head } from '../components/slices'\r\nimport SliceZone from '../components/SliceZone'\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  margin: 5vh 0;\r\n  padding: 1rem 10rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    padding: 1rem 2rem;\r\n  }\r\n`\r\n\r\nconst Project = ({ data: { prismic } }) => {\r\n  const { project: data } = prismic\r\n\r\n  return (\r\n    <Container>\r\n      <Head\r\n        title={data.title[0]?.text}\r\n        date={data.date[0]?.text}\r\n        summary={data.summary[0]?.text}\r\n        git={data.git?.url}\r\n        link={data.link?.url}\r\n        preview={data.preview}\r\n      />\r\n      <SliceZone slices={data?.body} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Project\r\n\r\nexport const pageQuery = graphql`\r\n  query PostBySlug($uid: String!) {\r\n    prismic {\r\n      project(lang: \"en-us\", uid: $uid) {\r\n        link {\r\n          ... on PRISMIC__ExternalLink {\r\n            url\r\n          }\r\n        }\r\n        git {\r\n          ... on PRISMIC__ExternalLink {\r\n            url\r\n          }\r\n        }\r\n        date\r\n        body {\r\n          ... on PRISMIC_ProjectBodyImage_text {\r\n            primary {\r\n              title1\r\n            }\r\n            fields {\r\n              img2\r\n              img1\r\n              content\r\n            }\r\n          }\r\n          ... on PRISMIC_ProjectBodyList {\r\n            primary {\r\n              list\r\n              title1\r\n            }\r\n          }\r\n          ... on PRISMIC_ProjectBodyImage_with_caption {\r\n            primary {\r\n              imageSharp {\r\n                childImageSharp {\r\n                  fluid {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n              caption\r\n            }\r\n          }\r\n          ... on PRISMIC_ProjectBodyText_with_title {\r\n            primary {\r\n              title1\r\n              body\r\n            }\r\n          }\r\n        }\r\n        preview\r\n        summary\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}