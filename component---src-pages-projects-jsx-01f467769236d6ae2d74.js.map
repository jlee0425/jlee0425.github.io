{"version":3,"sources":["webpack:///./src/components/projectCard.jsx","webpack:///./src/pages/projects.jsx"],"names":["CardContainer","styled","div","Background","Img","DescriptionBox","animated","Title","h2","Links","ProjectCard","data","title","url","git","image","useSpring","opacity","color","config","duration","setColor","background","setBackground","fluid","style","onMouseEnter","onMouseLeave","href","Container","Projects","location","edges","projectImages","projects","projectList","map","project","find","node","relativePath","img","name","childImageSharp","key"],"mappings":"ilPAKMA,EAAgBC,IAAOC,IAAV,6EAAGD,CAAH,wMAabE,EAAaF,YAAOG,KAAV,0EAAGH,CAAH,qIAUVI,EAAiBJ,YAAOK,IAASJ,KAAnB,8EAAGD,CAAH,8IAUdM,EAAQN,IAAOO,GAAV,qEAAGP,CAAH,qCAILQ,EAAQR,IAAOC,IAAV,qEAAGD,CAAH,wGAsDIS,EA9CK,SAAC,GAA0C,IAAD,IAAvCC,KAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,MAAc,EAClCC,aAAU,iBAAO,CACzCC,QAAS,EACTC,MAAO,QACPC,OAAQ,CAAEC,SAAU,SAHfF,EADqD,KAC9CG,EAD8C,OAMxBL,aAAU,iBAAO,CACnDM,WACE,gFAFGA,EANqD,KAMzCC,EANyC,KAU5D,OACE,kBAACvB,EAAD,KACE,kBAACG,EAAD,CAAYqB,MAAOT,IACnB,kBAACV,EAAD,CACEoB,MAAK,iBAAOP,EAAUI,GACtBI,aAAc,WACZL,EAAS,CACPJ,QAAS,EACTC,MAAO,UAETK,EAAc,CACZD,WACE,4EAGNK,aAAc,WACZN,EAAS,CACPJ,QAAS,EACTC,MAAO,UAETK,EAAc,CACZD,WACE,gFAIN,kBAACf,EAAD,KAAQK,GACR,kBAACH,EAAD,KACE,kBAAC,IAAD,CAAUK,KAAG,EAACD,IAAKC,IAClBD,EAAM,uBAAGe,KAAMf,GAAT,QAAyB,S,wBCjFpCgB,EAAY5B,IAAOC,IAAV,yEAAGD,CAAH,uJAsDA6B,UA7CE,SAAC,GAAiB,EAAfC,SAAgB,IAEfC,EAFc,OAE/BC,cAAiBD,MAmBbE,EAAWC,EAAYC,KAAI,SAAAC,GAC/B,IAAMtB,EAAQiB,EAAMM,MAClB,SAAAvB,GAAK,OAAIA,EAAMwB,KAAKC,eAAX,YAAwCH,EAAQI,OAErD9B,EAAO,CACXC,MAAOyB,EAAQK,KACf7B,IAAKwB,EAAQxB,KAAO,KACpBC,IAAKuB,EAAQvB,IACbC,MAAOA,EAAMwB,KAAKI,gBAAgBnB,OAEpC,OAAO,OAAP,UAAYb,MAEd,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAACiB,EAAD,KACGK,EAASE,KAAI,SAAAC,GAAO,OACnB,kBAAC,EAAD,CAAa1B,KAAM0B,EAASO,IAAKP,EAAQzB,e","file":"component---src-pages-projects-jsx-01f467769236d6ae2d74.js","sourcesContent":["import React from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\nimport IconLink from './iconLink'\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  justify-self: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80%;\r\n  max-width: 340px;\r\n  max-height: 480px;\r\n  box-shadow: 1px 1px 3px grey;\r\n  border-radius: 5px;\r\n`\r\nconst Background = styled(Img)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  & > img {\r\n    object-fit: fit !important;\r\n    object-position: 0% 0% !important;\r\n  }\r\n`\r\nconst DescriptionBox = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`\r\nconst Title = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 0;\r\n`\r\nconst Links = styled.div`\r\n  display: flex;\r\n  width: 25%;\r\n  justify-content: space-around;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  margin: 10px;\r\n`\r\nconst ProjectCard = ({ data: { title, url, git, image } }) => {\r\n  const [color, setColor] = useSpring(() => ({\r\n    opacity: 0,\r\n    color: 'black',\r\n    config: { duration: 500 }\r\n  }))\r\n  const [background, setBackground] = useSpring(() => ({\r\n    background:\r\n      'linear-gradient(220deg, rgba(207, 207, 207, 0), rgba(170, 172, 174, 0.8))'\r\n  }))\r\n  return (\r\n    <CardContainer>\r\n      <Background fluid={image} />\r\n      <DescriptionBox\r\n        style={{ ...color, ...background }}\r\n        onMouseEnter={() => {\r\n          setColor({\r\n            opacity: 1,\r\n            color: 'white'\r\n          })\r\n          setBackground({\r\n            background:\r\n              'linear-gradient(220deg, rgba(207, 207, 207, 0.5), rgba(30, 43, 49, 1))'\r\n          })\r\n        }}\r\n        onMouseLeave={() => {\r\n          setColor({\r\n            opacity: 0,\r\n            color: 'black'\r\n          })\r\n          setBackground({\r\n            background:\r\n              'linear-gradient(220deg, rgba(207, 207, 207, 0), rgba(170, 172, 174, 0.8))'\r\n          })\r\n        }}\r\n      >\r\n        <Title>{title}</Title>\r\n        <Links>\r\n          <IconLink git url={git} />\r\n          {url ? <a href={url}>LIVE</a> : null}\r\n        </Links>\r\n      </DescriptionBox>\r\n    </CardContainer>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nimport ProjectCard from '../components/projectCard'\r\nimport projectList from '../data/projects.json'\r\nimport SEO from '../components/seo'\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\r\n  grid-gap: 1rem;\r\n  align-items: center;\r\n  padding-top: 8vh;\r\n  height: 89vh;\r\n  overflow: auto;\r\n`\r\nconst Projects = ({ location }) => {\r\n  const {\r\n    projectImages: { edges }\r\n  } = useStaticQuery(graphql`\r\n    query {\r\n      projectImages: allFile(\r\n        filter: { relativePath: { regex: \"/projects/\" } }\r\n      ) {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            childImageSharp {\r\n              fluid(maxWidth: 340) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const projects = projectList.map(project => {\r\n    const image = edges.find(\r\n      image => image.node.relativePath === `projects/${project.img}`\r\n    )\r\n    const data = {\r\n      title: project.name,\r\n      url: project.url || null,\r\n      git: project.git,\r\n      image: image.node.childImageSharp.fluid\r\n    }\r\n    return { ...data }\r\n  })\r\n  return (\r\n    <>\r\n      <SEO title='Projects' />\r\n      <Container>\r\n        {projects.map(project => (\r\n          <ProjectCard data={project} key={project.title} />\r\n        ))}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}