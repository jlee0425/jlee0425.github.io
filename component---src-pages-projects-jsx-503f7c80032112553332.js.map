{"version":3,"sources":["webpack:///./src/components/projectCard.jsx","webpack:///./src/pages/projects.jsx"],"names":["Container","styled","div","Background","Img","DescriptionBox","Title","Button","button","Links","props","giveborder","ProjectCard","data","title","url","git","image","library","fluid","disabled","style","marginRight","href","Projects","location","edges","projectImages","projectList","map","project","find","node","relativePath","img","name","childImageSharp","key"],"mappings":"2jPAKMA,EAAYC,IAAOC,IAAV,yEAAGD,CAAH,0JAWTE,EAAaF,YAAOG,KAAV,0EAAGH,CAAH,gIAUVI,EAAiBJ,IAAOC,IAAV,8EAAGD,CAAH,8PAgBdK,EAAQL,IAAOC,IAAV,qEAAGD,CAAH,2FAOLM,EAASN,IAAOO,OAAV,sEAAGP,CAAH,oFAONQ,EAAQR,IAAOC,IAAV,qEAAGD,CAAH,4JAYG,SAAAS,GAAK,MAAyB,SAArBA,EAAMC,YAAyB,eAyBvCC,EAtBK,SAAC,GAAmD,IAAD,IAAhDC,KAAQC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QACrD,OACE,kBAAClB,EAAD,KACE,kBAACG,EAAD,CAAYgB,MAAOF,IACnB,kBAACZ,EAAD,KACE,kBAACC,EAAD,KACE,4BAAKQ,GACL,kBAACP,EAAD,CAAQa,UAAQ,GAAEF,IAEpB,kBAACT,EAAD,KACE,kBAAC,IAAD,CAAUO,KAAG,EAACD,IAAKC,EAAKK,MAAO,CAAEC,YAAa,SAC7CP,EACC,uBAAGQ,KAAMR,EAAKJ,WAAW,QAAzB,QAGE,S,wBC/ERX,EAAYC,IAAOC,IAAV,yEAAGD,CAAH,uJAqDAuB,UA5CE,SAAC,GAAiB,EAAfC,SAAgB,IAEfC,EAFc,OAE/BC,cAAiBD,MAmBnB,OACE,oCACE,kBAAC,IAAD,CAAKZ,MAAM,aACX,kBAAC,EAAD,KACGY,GACCE,EAAYC,KAAI,SAAAC,GACd,IAAMb,EAAQS,EAAMK,MAClB,SAAAd,GAAK,OAAIA,EAAMe,KAAKC,eAAX,YAAwCH,EAAQI,OAErDrB,EAAO,CACXC,MAAOgB,EAAQK,KACfpB,IAAKe,EAAQf,KAAO,KACpBC,IAAKc,EAAQd,IACbC,MAAOA,EAAMe,KAAKI,gBAAgBjB,MAClCD,QAASY,EAAQZ,SAEnB,OAAO,kBAAC,EAAD,CAAaL,KAAMA,EAAMwB,IAAKP,EAAQK,c","file":"component---src-pages-projects-jsx-503f7c80032112553332.js","sourcesContent":["import React from 'react'\r\nimport Img from 'gatsby-image'\r\nimport styled from 'styled-components'\r\nimport IconLink from './iconLink'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  justify-self: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80%;\r\n  max-width: 340px;\r\n  max-height: 480px;\r\n`\r\nconst Background = styled(Img)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  & > img {\r\n    object-fit: cover !important;\r\n    object-position: 0% 0% !important;\r\n  }\r\n`\r\nconst DescriptionBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding: 10px;\r\n  background: linear-gradient(\r\n    220deg,\r\n    rgba(255, 255, 255, 0.5),\r\n    rgba(115, 114, 114, 0.5)\r\n  );\r\n  border-radius: 15px;\r\n  box-shadow: 2px 2px 10px lightgrey;\r\n`\r\nconst Title = styled.div`\r\n  display: flex;\r\n  color: White;\r\n  height: 10%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nconst Button = styled.button`\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  padding: 3px;\r\n  height: 1.5rem;\r\n  background: white;\r\n`\r\nconst Links = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  height: 1.5rem;\r\n  font-size: 1.5rem;\r\n\r\n  a {\r\n    padding: 3px;\r\n    height: 1.5rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: ${props => props.giveborder === 'true' && '1px solid'};\r\n  }\r\n`\r\nconst ProjectCard = ({ data: { title, url, git, image, library } }) => {\r\n  return (\r\n    <Container>\r\n      <Background fluid={image} />\r\n      <DescriptionBox>\r\n        <Title>\r\n          <h2>{title}</h2>\r\n          <Button disabled>{library}</Button>\r\n        </Title>\r\n        <Links>\r\n          <IconLink git url={git} style={{ marginRight: '5px' }} />\r\n          {url ? (\r\n            <a href={url} giveborder='true'>\r\n              LIVE\r\n            </a>\r\n          ) : null}\r\n        </Links>\r\n      </DescriptionBox>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport ProjectCard from '../components/projectCard'\r\nimport projectList from '../data/projects.json'\r\nimport SEO from '../components/seo'\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\r\n  grid-gap: 1rem;\r\n  align-items: center;\r\n  padding-top: 8vh;\r\n  height: 89vh;\r\n  overflow: auto;\r\n`\r\nconst Projects = ({ location }) => {\r\n  const {\r\n    projectImages: { edges }\r\n  } = useStaticQuery(graphql`\r\n    query {\r\n      projectImages: allFile(\r\n        filter: { relativePath: { regex: \"/projects/\" } }\r\n      ) {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            childImageSharp {\r\n              fluid(maxWidth: 340) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <>\r\n      <SEO title='Projects' />\r\n      <Container>\r\n        {edges &&\r\n          projectList.map(project => {\r\n            const image = edges.find(\r\n              image => image.node.relativePath === `projects/${project.img}`\r\n            )\r\n            const data = {\r\n              title: project.name,\r\n              url: project.url || null,\r\n              git: project.git,\r\n              image: image.node.childImageSharp.fluid,\r\n              library: project.library\r\n            }\r\n            return <ProjectCard data={data} key={project.name} />\r\n          })}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}